buildscript {
  repositories {
    jcenter()
    maven { url 'https://plugins.gradle.org/m2/' }
  }
  dependencies {
    classpath "org.springframework.boot:spring-boot-gradle-plugin:1.5.2.RELEASE"
    classpath "com.google.protobuf:protobuf-gradle-plugin:0.8.1"
  }
}

apply plugin: "com.google.protobuf"
apply plugin: "java"
apply plugin: "idea"
apply plugin: "application"
apply plugin: "org.springframework.boot"
apply plugin: "war"

group 'com.maihe.platform'
version '1.0-SNAPSHOT'

sourceCompatibility = 1.8
targetCompatibility = 1.8

configurations {
  dev
}

ext {
  grpcVersion = "1.2.0"
  springBootVersion = "1.5.2.RELEASE"
  mainClass = "com.maihe.Application"
  activitiVersion = "5.22.0"
}

mainClassName = "$mainClass"

repositories {
  maven { url 'http://maven.aliyun.com/nexus/content/groups/public/' }
  jcenter()
  maven { url 'http://repo.spring.io/plugins-release/' }
}

configurations {
  provided
}

dependencies {
  //test
  testCompile "junit:junit:4.12"
  testCompile "org.mockito:mockito-core:1.9.5"
  // grpc
  compile "io.grpc:grpc-netty:$grpcVersion"
  compile "io.grpc:grpc-protobuf:$grpcVersion"
  compile "io.grpc:grpc-stub:$grpcVersion"
  compile 'net.devh:grpc-server-spring-boot-starter:1.0.1.RELEASE'
  testCompile 'net.devh:grpc-client-spring-boot-starter:1.0.1.RELEASE'
  //druid
  compile "com.alibaba:druid:1.0.29"
  // fastjson
  compile "com.alibaba:fastjson:1.2.31"
  //hibernate
  compile "org.hibernate:hibernate-core:5.2.10.Final"
  //spring boot
  compile "org.springframework.boot:spring-boot-starter:$springBootVersion"
  compile "org.springframework.boot:spring-boot-starter-data-jpa:$springBootVersion"
//  compile "org.springframework.boot:spring-boot-starter-actuator:$springBootVersion"
  provided("org.springframework.boot:spring-boot-starter-web:$springBootVersion") {
    exclude module: "spring-boot-starter-tomcat"
  }
  testCompile "org.springframework.boot:spring-boot-starter-test:$springBootVersion"
  // devtools
  dev "org.springframework.boot:spring-boot-devtools:$springBootVersion"
  // lombok(log)
  compile "org.projectlombok:lombok:1.16.16"
  //jdbc-mysql
  compile 'mysql:mysql-connector-java:5.1.39'
  //jdbc-oracle
  compile files('gradle/lib/ojdbc7.jar')
  // activiti
  compile "org.activiti:activiti-spring-boot-starter-basic:$activitiVersion"
  compile "org.activiti:activiti-spring-boot-starter-rest-api:$activitiVersion"
//  compile "org.activiti:activiti-spring-boot-starter-actuator:$activitiVersion"
  compile "org.activiti:activiti-spring-boot-starter-jpa:$activitiVersion"
  compile "org.activiti:activiti-json-converter:$activitiVersion"
  compile "org.activiti:activiti-modeler:$activitiVersion"
  // batik
  compile "org.apache.xmlgraphics:batik-transcoder:1.7"
  // beanutils
  compile "commons-beanutils:commons-beanutils:1.9.3"
  //xmls
  compile group: 'org.apache.poi', name: 'poi', version: '3.9'
}

protobuf {
  protoc {
    artifact = "com.google.protobuf:protoc:3.2.0"
  }
  plugins {
    grpc {
      artifact = "io.grpc:protoc-gen-grpc-java:$grpcVersion"
    }
  }
  generateProtoTasks {
    all()*.plugins {
      grpc {
        // To generate deprecated interfaces and static bindService method,
        // turn the enable_deprecated option to true below:
        option 'enable_deprecated=false'
      }
    }
  }
  generatedFilesBaseDir = "$projectDir/src/main/protoGen"
}

jar {
  manifest.attributes "Main-Class": "$mainClass"
  baseName = "maihe-platform-java"
  version = "0.0.1"
}

idea {
  module {
    sourceDirs += file("$projectDir/src/main/protoGen/main/java");
    sourceDirs += file("$projectDir/src/main/protoGen/main/grpc");
  }
}

bootRun {
  // Use Spring Boot DevTool only when we run Gradle bootRun task
  classpath = sourceSets.main.runtimeClasspath + configurations.dev
}
